[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "biostructbenchmark"
version = "0.0.1"
description = "A comprehensive toolkit for benchmarking computational structure predictions against experimental DNA-protein complexes"
authors = [
    { name = "Delta Kapp", email = "deltakapp@gmail.com" },
    { name = "Morgan Esler", email = "mesler1397@gmail.com" }
]
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
requires-python = ">=3.8"
keywords = ["bioinformatics", "structural-biology", "protein", "dna", "rmsd", "benchmarking", "alphafold"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
]

# Core dependencies required for basic functionality
dependencies = [
    "biopython>=1.85",       # Structure parsing and manipulation
    "numpy>=1.21.0",         # Numerical computations and arrays
    "pandas>=1.3.0",         # Data handling and CSV export
    "matplotlib>=3.5.0",     # Core plotting and visualization
    "scipy>=1.7.0",          # Scientific computing and statistics
]

[project.urls]
"Homepage" = "https://github.com/BioStructBenchmark/BioStructBenchmark"
"Documentation" = "https://biostructbenchmark.readthedocs.io/"
"Repository" = "https://github.com/BioStructBenchmark/BioStructBenchmark.git"
"Bug Tracker" = "https://github.com/BioStructBenchmark/BioStructBenchmark/issues"
"Changelog" = "https://github.com/BioStructBenchmark/BioStructBenchmark/blob/main/CHANGELOG.md"

# CLI entry points
[project.scripts]
biostructbenchmark = "biostructbenchmark.__main__:main"

# Optional dependency groups for enhanced functionality
[project.optional-dependencies]

# Enhanced visualization capabilities
visualization = [
    "seaborn>=0.11.0",       # Statistical plotting and aesthetics
    "py3dmol>=2.0.0",        # Interactive 3D molecular visualization
]

# DNA analysis and hydrogen bond network analysis
dna-analysis = [
    "networkx>=2.6",         # Hydrogen bond network analysis
]

# Principal Component Analysis for outlier detection
pca = [
    "scikit-learn>=1.0.0",   # Machine learning algorithms including PCA
]

# CURVES+ integration (note: requires separate CURVES+ installation)
curves = [
    "networkx>=2.6",         # For hydrogen bond networks in CURVES+ analysis
]

# Complete analysis suite (all optional features)
all = [
    "biostructbenchmark[visualization,dna-analysis,pca,curves]",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",         # Testing framework
    "pytest-cov>=4.0.0",     # Coverage reporting
    "pytest-xdist>=3.0.0",   # Parallel testing
    "black>=22.0.0",         # Code formatting
    "isort>=5.10.0",         # Import sorting
    "flake8>=5.0.0",         # Linting
    "mypy>=1.0.0",           # Type checking
    "pre-commit>=2.20.0",    # Git hooks
]

# Documentation dependencies
docs = [
    "sphinx>=5.0.0",         # Documentation generation
    "sphinx-rtd-theme>=1.0.0", # ReadTheDocs theme
    "sphinxcontrib-bibtex>=2.4.0", # Bibliography support
    "myst-parser>=0.18.0",   # Markdown support
]

# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "hypothesis>=6.0.0",     # Property-based testing
]

# Performance testing
benchmark = [
    "pytest-benchmark>=4.0.0", # Performance benchmarking
    "memory-profiler>=0.60.0",  # Memory usage profiling
]

# Configuration for development tools
[tool.setuptools.packages.find]
where = ["."]
include = ["biostructbenchmark*"]

[tool.setuptools.package-data]
biostructbenchmark = ["py.typed"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",                    # Show all test results
    "-q",                     # Quiet mode
    "--strict-markers",       # Treat unknown markers as errors
    "--strict-config",        # Treat config issues as errors
    "--cov=biostructbenchmark", # Coverage for main package
    "--cov-report=term-missing", # Show missing coverage
    "--cov-report=html",      # HTML coverage report
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "curves: marks tests requiring CURVES+ installation",
    "visualization: marks tests for visualization components",
]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["biostructbenchmark"]
known_third_party = ["Bio", "numpy", "pandas", "matplotlib", "scipy", "seaborn", "networkx", "py3dmol", "sklearn"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["biostructbenchmark"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 linting (in setup.cfg format for compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]
per-file-ignores = [
    "__init__.py:F401",  # Allow unused imports in __init__.py
]
